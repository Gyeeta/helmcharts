
# Default values for Gyeeta Shyama server and Postgres DB :

image:
  registry: ghcr.io
  repository: gyeeta/shyama
  # -- The image tag to pull. Overrides the image tag whose default is the chart appVersion.
  tag: ""
  pullPolicy: IfNotPresent

# Secrets containing credentials when pulling from private/secure registries.
imagePullSecrets: []

# Set a new name if you want to override the release name used
nameOverride: ""

# Same as nameOverride but for the fullname.
fullnameOverride: ""

# Shyama pods host aliases
# https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
hostAliases: []

# Add additional pod annotations
podAnnotations: {}

# Add additional pod labels
podLabels: {}

# Set pod priorityClassName
podPriorityClassName: ""

# Affinity constraint for pod scheduling
# Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set
affinity: {}

# Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
# ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
podAffinityPreset: ""

# Pod anti-affinity preset. Ignored if `primary.affinity` is set. Allowed values: `soft` or `hard`
podAntiAffinityPreset: soft

# Node affinity preset
nodeAffinityPreset:
  # Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  type: ""

  # Node label key to match Ignored if `affinity` is set.
  # E.g.
  # key: "kubernetes.io/e2e-az-name"
  #
  key: ""

  # Node label values to match. Ignored if `affinity` is set.
  # E.g.
  # values:
  #   - e2e-az1
  #   - e2e-az2
  #
  values: []

resources:
  requests: {}
  #  cpu: 250m
  #  memory: 250Mi
  limits: {}
  #  cpu: 5000m
  #  memory: 64Gi

# Selectors used to deploy on a given nodes
nodeSelector: {}

# Tolerations for pods assignment
tolerations: []

# Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
topologySpreadConstraints: []

# Automate configuration before or after startup
lifecycleHooks: {}

updateStrategy:
  # -- Perform rolling updates by default
  type: RollingUpdate
  rollingUpdate: {}

# readinessProbe 
readinessEnabled: true

# Enable PodSecurityPolicy (only for K8s versions < 1.25)
podSecurityPolicy: false

mounts:
  # A list of extra volumes you want to add to shyama container
  volumes: []
  # A list of extra volumes you want to add to shyama container
  volumeMounts: []

extra:
  # -- Extra environment variables that will be pass onto shyama container
  env: {}
  # -- Extra command-line arguments
  args: []


#
# shyama config  
#
shyama_config:

  # Name of shyama instance : Name must start with keyword shyama : If not specified, auto-generated. 
  # Postgres DB will be created based on this name... 
  shyama_name: ""

  # Password string to be used by remote Madhava servers and Web servers to authenticate. If not specified, auto-generated
  shyama_secret: ""

  # Cloud Operator : Specify as either of aws, gcp, azure. Other clouds not yet supported. For on-prem, leave blank
  cloud_type: ""

  # Region Name : Ignore if cloud_type is set. For on-prem or other clouds, specify to override the cloud region name
  region_name: ""

  # Zone Name : Ignore if cloud_type is set. For on-prem or other clouds, specify to override the cloud zone name
  zone_name: ""

  # Minimum number of Madhava servers that should register with Shyama before Shyama registers any Host Agent partha.
  # Number of Madhava needed is approx <Max Hosts to monitor> / 200 (depending on Madhava host CPU/Memory specs) 
  min_madhava: 1

  # Mandatory Webserver URL for use in alert payloads. If alerts sent to external servers, URL should be valid for 
  # external connections to be able to acknowledge alerts or manually resolve alerts. Will use autogenerated URL 
  # http://nodewebserver.<namespace>.svc.cluster.local:10039 if not specified
  webserver_url: ""

  # Shyama DB (postgres) Config
  db:
    # If postgres.enabled is true, then specify as localhost
    postgres_hostname: "localhost"
    
    postgres_port: 10040

    # Specify only if external postgres DB to be used
    postgres_user: postgres

    # Specify only if external postgres DB to be used
    postgres_password: ""

    # Number of days of data storage in DB (max 60) 
    storage_days: 3

  # Shyama service config
  service:

    # Shyama Service type (Specify either ClusterIP or NodePort)
    type: ClusterIP

    # Shyama service port
    port: 10037

    # Specify if type set to NodePort. Choose port between <30000-32767>
    # ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    nodePort: ""

    # Static clusterIP or None for headless services
    clusterIP: ""

    # Service Annotations 
    annotations: {}

    # Load balancer IP if service type is `LoadBalancer`
    # Set the LoadBalancer service type to internal only
    loadBalancerIP: ""

    # Enable client source IP preservation for type set to LoadBalancer or NodePort
    # ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    externalTrafficPolicy: Cluster

    # Addresses that are allowed when service is LoadBalancer
    # loadBalancerSourceRanges:
    # - 10.10.10.0/24
    loadBalancerSourceRanges: []

  # Set the Alert Actions configuration (in JSON format)
  alertactions: ""
  # alertactions: |
  #   [
  #     {
  #         "name": "page",
  #         "acttype": "pagerduty",
  #         "config": {
  #           "api_url": "https://events.pagerduty.com/v2/enqueue",
  #           "routing_key": "ROUTING_KEY"
  #         },
  #         "send_resolved": true
  #     },
  #     {
  #       "name": "email action",
  #       "acttype": "email",
  #       "config": {
  #         "host": "smtp.gmail.com",
  #         "port": 465,
  #         "user": "user@host.com",
  #         "auth_type": "login",
  #         "password": "user-password",
  #         "to": "Devops <devops@host.com>",
  #         "subject_prefix": "Gyeeta Alert from cluster xyz",
  #         "use_pool": true
  #       },
  #       "send_resolved": false
  #     },
  #     {
  #       "name": "slack postmessage",
  #       "acttype": "slack",
  #       "config": {
  #         "api_url": "https://slack.com/api/chat.postMessage",
  #         "channel": "my_channel",
  #         "access_token": "xoxb-TOKEN",
  #         "tls_reject_unauthorized": true
  #       },
  #       "send_resolved": false
  #     },
  #     {
  #       "name": "slack webhook",
  #       "acttype": "slack",
  #       "config": {
  #         "api_url": "https://hooks.slack.com/services/ABC/PQR/abcd",
  #         "tls_reject_unauthorized": true
  #       },
  #       "send_resolved": false
  #     },
  #     {
  #       "name": "Local Webhook",
  #       "acttype": "webhook",
  #       "config": {
  #         "api_url": "http://webhook-host:8080/v1/webhook",
  #         "auth_type": "none",
  #         "tls_reject_unauthorized": false
  #       },
  #       "send_resolved": true
  #     }
  #   ]	

  # Set the Alert Definitions configuration (in JSON format)
  alertdefs: ""
  # alertdefs: |
  #   [
  #     {
  #       "alertname": "HTTP Service Client Server Errors",
  #         "annotations": [
  #           "Warning : HTTP Service Errors"
  #         ],
  #         "severity": "warning",
  #         "subsys": "svcstate",
  #         "filter": "( { sererr > 5 } or { clierr > 10 } ) and { cluster !~ '^edev.*' }",
  #         "forceclose": "5h",
  #         "groupby": [
  #           "alertname",
  #         "name"
  #         ],
  #         "groupwait": "0",
  #         "repeatafter": "1h",
  #         "labels": [
  #           "http error"
  #         ],
  #         "action": [
  #         {
  #           "name": "email action",
  #           "config": {
  #             "to": "Joe <joe@host.com>",
  #             "subject_prefix": "HTTP Service Error from Gyeeta"
  #           },
  #           "send_resolved": true
  #         },
  #         {
  #           "name": "slack postmessage"
  #         }
  #         ]
  #     },
  #     {
  #       "alertname": "Persistent State Bad for DB",
  #       "annotations": "Postgres/Redis State bad over 3 minutes",
  #       "subsys": "extsvcstate",
  #       "alerttype": "dbaggr",
  #       "queryperiod": "1m",
  #       "queryevery": "1m",
  #       "filter": " { name in 'postgres','redis','mysql' } ",
  #       "aggrfilter": " { svcissue > 4 } ",
  #       "aggroper": "avg",
  #       "numcheckfor": 3,
  #       "severity": "critical",
  #       "action": [
  #       {
  #         "name": "email action",
  #         "continue": true
  #       },
  #       {
  #         "name": "Local Webhook",
  #         "continue": true
  #       }
  #       ],
  #       "repeatafter": "2h",
  #       "forceclose": "10h",
  #       "manualresolve": false,
  #       "mutetimes": [
  #       {
  #         "tz": "UTC",
  #         "dayofweek": [
  #           "Sun"
  #         ]
  #       }
  #       ]
  #     },
  #     {
  #       "alertname": "VM Issue",
  #       "annotations": "Alert if VM Delays persistent",
  #       "subsys": "extprocstate",
  #       "alerttype": "dbaggr",
  #       "queryperiod": "1m",
  #       "queryevery": "1m",
  #       "aggrfilter": "(( { vmdel > 10 }  and  { issue > 2 } ) and  ({ inswpdel > 0 }  or  { inrecdel > 0 }  or  { instop > 0 } ))",
  #       "aggroper": "avg",
  #       "numcheckfor": 2,
  #       "severity": "warning",
  #       "action": [
  #       {
  #         "name": "slack postmessage"
  #       }
  #       ],
  #       "repeatafter": "2h",
  #       "forceclose": "10h",
  #       "manualresolve": false
  #     },
  #     {
  #       "alertname": "OOM Alert",
  #       "annotations": "Alert on Out of Memory OOM",
  #       "subsys": "cpumem",
  #       "alerttype": "realtime",
  #       "filter": "{ cpumem.oom_kill > 0 }",
  #       "numcheckfor": 1,
  #       "severity": "critical",
  #       "action": [
  #       {
  #         "name": "page",
  #       }
  #       ],
  #       "repeatafter": "0h",
  #       "forceclose": "6h",
  #       "manualresolve": true
  #     }
  #   ]


  # Set the Alert Silences configuration (in JSON format)
  alertsilences: ""
  # alertsilences: |
  #   [
  #     {
  #       "name": "sunday evening non critical",
  #         "match": " { severity notin  'critical' } ",
  #         "mutetimes": [
  #         {
  #           "tz": "+05:30",
  #           "dayofweek": [
  #             "Sun"
  #           ],
  #           "timerange": [
  #             "17:00-20:00"
  #           ]
  #         }
  #         ]
  #     }
  #   ]  

  # Set the Alert Inhibits configuration (in JSON format)
  alertinhibits: ""
  # alertinhibits: |
  #   [
  #     {
  #       "name": "critical inhibits other severity alerts",
  #         "src_match": " { severity in  'critical' } ",
  #         "target_match": " { severity notin  'critical' } ",
  #         "equal_cols": [
  #           "alertname"
  #         ]
  #     }
  #   ]  


#################################
# Values for Gyeeta PostgreSQL DB
#################################
postgresdb:
  
  # Enable Shyama specific Postgres DB. If false, an external Postgres must be specified in the shyama config
  enabled: true

  image:
    registry: ghcr.io
    repository: gyeeta/postgresdb
    tag: "12.2.0"
    pullPolicy: IfNotPresent

  # Secrets containing credentials when pulling from private/secure registries.
  imagePullSecrets: []

  resources:
    requests: {}
    #  cpu: 250m
    #  memory: 150Mi
    limits: {}
    #  cpu: 4000m
    #  memory: 64Gi

  # Automate configuration before or after startup
  lifecycleHooks: {}

  # livenessProbe 
  livenessEnabled: true

  mounts:
    # A list of extra volumes you want to add to postgresdb container
    volumes: []
    # A list of extra volumes you want to add to postgresdb container
    volumeMounts: []

  extra:
    # -- Extra environment variables that will be pass onto postgresdb container
    env: {}
    # -- Extra command-line arguments
    args: []
    # -- Extra environment variables that will be pass onto postgresdb init db container
    envinit: {}
    # -- Extra command-line arguments for postgresdb init container
    argsinit: []

  #
  # postgresdb config  
  #
  postgresdb_config:
    # postgres user password
    password: ""

    service:
      port: 10040


  persistence:
    # persistence.enabled PostgreSQL data persistence using PVC. If false, will use emptyDir (delete on pod termination) instead
    enabled: true

    # Name of an existing PVC to use
    existingClaim: ""

    # PVC Storage Class for PostgreSQL data volume (Use only for Cloud installs)
    # If set to "-", disables dynamic provisioning
    # If undefined (the default) or set to null, the default provisioner is used.  (gp2 on AWS, standard on GKE, AWS & OpenStack)
    storageClass: ""

    # PVC Access Mode for PostgreSQL volume
    accessModes:
      - ReadWriteOnce

    # PVC Storage Size for PostgreSQL volume
    size: 10Gi

    # Annotations for the PVC
    annotations: {}

    # Selector to match an existing Persistent Volume (this value is evaluated as a template)
    # selector:
    #   matchLabels:
    #     app: my-app
    selector: {}

    # Custom PVC dataSource
    dataSource: {}
    
    # Custom PVC dataSourceRef (K8s versions 1.24+) (If specified dataSource will be ignored)
    dataSourceRef: {}

  initChownData:
    # If false, data ownership will not be reset at startup
    enabled: false

    # postgresdb initChownData container image
    image:
      repository: busybox
      tag: "1.34.1"
      sha: ""
      pullPolicy: IfNotPresent

    # postgresdb initChownData resource requests and limits
    resources: {}

  # Create Headless service for postgresdb
  postgresdb_service: false

# NetWorkPolicy parameters
networkPolicy:
  enabled: false

# Common Service Account
serviceAccount:
  create: false

  # Automount service account token for the server service account
  automountServiceAccountToken: true

  # Annotations for service account. Evaluated as a template. Only used if `create` is `true`
  annotations: {}

